version: '3.8'

services:
  mysql:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_DATABASE: 'mysql'
      MYSQL_USER: 'stan'
      MYSQL_PASSWORD: 'abc123@A'
      MYSQL_ROOT_PASSWORD: 'abc123@A'
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    ports:
      - '3306:3306'
    expose:
      - '3306'
    networks:
      - dev_net
  postgress:
    container_name: postgres
    image: postgres:latest
    restart: always
    environment:
    ports:
      - 5432:5432
    volumes:
        #allow *.sql, *.sql.gz, or *.sh and is execute only if data directory is empty
      - ./dbfiles:/docker-entrypoint-initdb.d
      - /var/lib/postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: qwerty
      POSTGRES_DB: postgres
    networks:
      - dev_net
  adminer:
    container_name: adminer
    image: adminer
    restart: always
    depends_on: 
      - postgress
    ports:
       - 9090:8080
    networks:
      - dev_net
  #Billin app backend service
  billingapp-back:
    build:
      context: ./java
      args:
        - JAR_FILE=*.jar
    container_name: billingApp-back      
    environment:
       - JAVA_OPTS=
         -Xms256M 
         -Xmx256M         
    depends_on:     
      - postgres_db
    ports:
      - 8080:8080
    networks:
      - dev_net
  #Billin app frontend service
  billingapp-front:
    build:
      context: ./angular 
    container_name: billingApp-front
    depends_on:
      - billingapp-back
    ports:
      - 80:80
    networks:
      - dev_net
networks:
  dev_net:
    driver: bridge
